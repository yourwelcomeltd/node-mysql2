name: CI - OSX

on:
  pull_request:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  MYSQL_PORT: 3306
  MYSQL_USER: root
  MYSQL_DATABASE: test

jobs:
  tests-osx:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 20.x]
        mysql-version: ["mysql:8.0.33"]
        use-compression: [0, 1]
        use-tls: [0, 1]
        mysql_connection_url_key: [""]
    env:
      MYSQL_CONNECTION_URL: ${{ secrets[matrix.mysql_connection_url_key] }}

    name: Node.js ${{ matrix.node-version }} - DB ${{ matrix.mysql-version }}${{ matrix.mysql_connection_url_key }} - SSL=${{matrix.use-tls}} Compression=${{matrix.use-compression}}

    steps:
      - uses: actions/checkout@v3

      - name: Install Colima
        run: brew install colima

      - name: Install Docker
        run: brew install --formula docker

      - name: Start Docker
        run: colima start

      - name: Pull MySQL
        if: ${{ matrix.mysql-version }}
        run: docker pull ${{ matrix.mysql-version }}

      - name: Set up MySQL
        if: ${{ matrix.mysql-version }}
        run: docker run -d -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} -p ${{ env.MYSQL_PORT }}:3306 ${{ matrix.mysql-version }}

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install npm dependencies
        run: npm ci

      - name: Wait mysql server is ready
        if: ${{ matrix.mysql-version }}
        run: node tools/wait-up.js

      - name: Run tests
        run: FILTER=${{matrix.filter}} MYSQL_USE_TLS=${{ matrix.use-tls }} MYSQL_USE_COMPRESSION=${{ matrix.use-compression }} npm run coverage-test
